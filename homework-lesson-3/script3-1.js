let task1 = "number" + 23 + 32;
console.log(task1);
//рядок "number2332"

//маємо 2 однакових оператора (бінарний +), починаємо виконувати зліва направо
//якщо будь-який з операндів є рядком, тоді бінарний + перетворює інший операнд на рядок
//додаємо до рядка "number" число 23 - отримуємо рядок "number23"
//додаємо до рядка "number23" число 32 - отримуємо рядок "number2332"

let task2 = 41 + 1 + "number";
console.log(task2);
//рядок "42number"

//маємо 2 однакових оператора (бінарний +), починаємо виконувати зліва направо
//додаємо до числа 41 число 1 - отримуємо число 42
//якщо будь-який з операндів є рядком, тоді бінарний + перетворює інший операнд на рядок
//додаємо число 42 до рядка "number" - отримуємо рядок "42number"

let task3 = null + 1;
console.log(task3);
//число 1

//null - означає навмисну відсутність будь-якого значення об’єкта
//додаємо відсутність до числа 1 - отримуємо число 1

let task4 = "five" + +"two";
console.log(task4);
//рядок "fiveNaN"

//кожен оператор має відповідний номер пріоритету
//першим виконується той оператор, який має найбільший номер пріоритету
//унарний + 14 номер, бінарний + 11 номер, першим буде виконуватись унарний +
//унарний + перетворює рядок "two" на число - отримуємо NaN
//так як в цьому рядку немає значення, що є гарантованим числом
//якщо будь-який з операндів є рядком, тоді бінарний + перетворює інший операнд на рядок
//додаємо до рядка "five" значення NaN - отримуємо рядок "fiveNaN"

let task5 = 2 && 7;
console.log(task5);
//число 7

//оператор && перетворює кожен операнд на булевий і повертає перше значення false
//якщо перший операнд правдивий, то оператор && повертає другий операнд
//отримуємо число 7

let task6 = +"40" + +"2";
console.log(task6);
//число 42

//кожен оператор має відповідний номер пріоритету
//першим виконується той оператор, який має найбільший номер пріоритету
//унарний + 14 номер, бінарний + 11 номер, першим буде виконуватись унарний +
//рядок "40" перетворюється на число 40
//рядок "2" перетворюється на число 2
//додаємо до числа 40 число 2 - отримуємо число 42

let task7 = "10" - 5 === 6;
console.log(task7);
//false

//арифметичні оператори (крім бінарний +) працюють тільки з числами
//вони завжди перетворюють свої операнди на числа
//бінарний - перетворює рядок "10" на число 10
//віднімаємо від числа 10 число 5 - отримуємо число 5
//потім маємо оператор строгої рівності ===
//порівнюємо число 5 та число 6 на рівність - отримуємо false

let task8 = true + false;
console.log(task8);
//число 1

//бінарний + перетворює булеві вирази на числа
//вираз true дорівнює числу 1, вираз false дорівнює числу 0
//додаємо до числа 1 число 0 - отримуємо число 1

let task9 = "4px" - 3;
console.log(task9);
//NaN

//арифметичні оператори (крім бінарний +) працюють тільки з числами
//вони завжди перетворюють свої операнди на числа
//бінарний - перетворює рядок "4px" на число - отримуємо NaN
//так як в цьому рядку немає значення, що є гарантованим числом
//віднімаємо від NaN число 3 - отримуємо NaN

let task10 = "4" - 3;
console.log(task10);
//число 1

//арифметичні оператори (крім бінарний +) працюють тільки з числами
//вони завжди перетворюють свої операнди на числа
//бінарний - перетворює рядок "4" на число 4
//від числа 4 віднімаємо число 3 - отримуємо число 1

let task11 = "2" + 3 ** 2;
console.log(task11);
//рядок "29"

//кожен оператор має відповідний номер пріоритету
//першим виконується той оператор, який має найбільший номер пріоритету
//піднесення до степеня номер 13, віднімання номер 11, першим виконуємо піднесення до степеня
//підносимо число 3 до 2 степені - отримуємо число 9
//якщо будь-який з операндів є рядком, тоді бінарний + перетворює інший операнд на рядок
//додаємо до рядку "2" число 9 - отримуємо рядок "29"

let task12 = 12 / "6";
console.log(task12);
//число 2

//арифметичні оператори (крім бінарний +) працюють тільки з числами
//вони завжди перетворюють свої операнди на числа
//рядок "6" перетворюється на число 6
//ділимо число 12 на число 6 - отримуємо число 2

let task13 = 23 + 42 + "number";
console.log(task13);
//рядок "65number"

//маємо 2 однакових оператора (бінарний +), починаємо виконувати зліва направо
//додаємо до числа 23 число 42 - отримуємо число 65
//якщо будь-який з операндів є рядком, тоді бінарний + перетворює інший операнд на рядок
//додаємо до числа 65 рядок "number" - отримуємо рядок "65number"

let task14 = "10" + (5 === 6);
console.log(task14);
//рядок "10false"

//спочатку виконуємо дію в дужках
//маємо оператор строгої рівності ===
//порівнюємо число 5 та число 6 на рівність - отримуємо false
//якщо будь-який з операндів є рядком, тоді бінарний + перетворює інший операнд на рядок
//додаємо до рядку "10" вираз false - отримуємо рядок "10false"

let task15 = "number" + 15 + 3;
console.log(task15);
//рядок "number153"

//маємо 2 однакових оператора (бінарний +), тому починаємо виконувати зліва направо
//якщо будь-який з операндів є рядком, тоді бінарний + перетворює інший операнд на рядок
//додаємо до рядку "number" число 15 - отримуємо рядок "number15"
//додаємо до рядку "number15" число 3 - отримуємо рядок "number153"

let task16 = undefined + 1;
console.log(task16);
//NaN

//арифметичні оператори працюють тільки з числами
//вони завжди перетворюють свої операнди на числа
//undefined стає NaN після числового перетворення
//додаємо до NaN число 1 - отримуємо NaN

let task17 = "true" == true;
console.log(task17);
//false

//коли порівнюються значення різних типів, JavaScript конвертує ці значення в числа
//рядок "true" при числовому перетворенні стає NaN
//вираз true при числовому перетворенні стає числом 1
//прирівнюємо NaN до числа 1 - отримуємо false

let task18 = false == "false";
console.log(task18);
//false

//коли порівнюються значення різних типів, JavaScript конвертує ці значення в числа
//вираз false при числовому перетворенні стає числом 0
//рядок "false" при числовому перетворенні стає NaN
//прирівнюємо число 0 до NaN - отримуємо false

let task19 = null == "";
console.log(task19);
//false

//коли порівнюються значення різних типів, JavaScript конвертує ці значення в числа
//при нестрогому порівнянні ==, null не перетворюється на інший тип
//"" перетворюється на число 0
//прирівнюємо null до числа 0 - отримуємо false

let task20 = 3 ** (9 / 3);
console.log(task20);
//число 27

//спочатку виконуємо дію в дужках
//ділимо число 9 на число 3 - отримуємо число 3
//підносимо число 3 до 3 степені - отримуємо число 27

let task21 = !!"false" == !!"true";
console.log(task21);
//true

//подвійний НЕ !! іноді використовується для перетворення значення на булевий тип
//пустий рядок дорівнює false, всі інші - true
//рядок "false" перетворюється на вираз true
//рядок "true" перетворюється на вираз true
//прирівнюємо - отримуємо true

let task22 = 0 || ("0" && 1);
console.log(task22);
//число 1

//спочатку виконуємо дію в дужках
//оператор && перетворює кожен операнд на булевий
//пустий рядок дорівнює false, всі інші - true
//рядок "0" перетворюється на вираз true
//якщо перший операнд правдивий, то оператор && повертає другий операнд
//отримуємо число 1
//оператор || перетворює кожен операнд на булевий і повертає перше значення true
//число 1 розглядається як true, число 0 — як false
//отримуємо число 1

let task23 = 1 < 2 < 3;
console.log(task23);
//true

//всі оператори порівняння повертають значення логічного типу
//порівнюємо чи число 1 менше за число 2 - отримуємо true
//порівнюємо чи число 2 менше за число 3 - отримуємо true

let task24 = "foo" + +(+"bar");
console.log(task24);
//рядок "fooNaN"

//спочатку виконуємо дію в дужках
//унарний + перетворює рядок "bar" на число - отримуємо NaN
//унарний + перетворює NaN на число - отримуємо NaN
//якщо будь-який з операндів є рядком, тоді бінарний + перетворює інший операнд на рядок
//додаємо до рядка "foo" NaN - отримуємо рядок "fooNaN"

let task25 = 3 ** 2 / 3;
console.log(task25);
//число 3

//кожен оператор має відповідний номер пріоритету
//першим виконується той оператор, який має найбільший номер пріоритету
//піднесення до степеня номер 13, ділення номер 12, першим виконуємо піднесення до степеня
//підносимо число 3 до 2 степеня - отримуємо число 9
//ділимо число 9 на число 3 - отримуємо число 3

let task26 = 1 < 2 > 3;
console.log(task26);
//false

//всі оператори порівняння повертають значення логічного типу
//порівнюємо чи число 1 менше за число 2 - отримуємо true
//порівнюємо чи число 2 більше за число 3 - отримуємо false

let task27 = (+null == false) < 1;
console.log(task27);
//false

//спочатку виконуємо дію в дужках
//унарний + перетворює null на число
//null стає числом 0 при числовому перетворенні
//коли порівнюються значення різних типів, JavaScript конвертує ці значення в числа
//false стає числом 0 при числовому перетворенні
//порівнюємо ці два значення - отримуємо true
//коли порівнюються значення різних типів, JavaScript конвертує ці значення в числа
//логічне значення true стає числом 1
//порівнюємо чи число 1 менше за число 1 - отримуємо false

let task28 = (false && true) || true;
console.log(task28);
//true

//оператор І && має вищий пріоритет за АБО ||
//оператор && повертає перше значення false - отримуємо false
//оператор || повертає перше значення true - отримуємо true

let task29 = false && (true || true);
console.log(task29);
//false

//спочатку виконуємо дію в дужках
//оператор || повертає перше значення true - отримуємо true
//оператор && повертає перше значення false - отримуємо false

let task30 = (+null == false) < 1 ** 5;
console.log(task30);
//false

//спочатку виконуємо дію в дужках
//унарний + перетворює null на число
//null стає числом 0 при числовому перетворенні
//коли порівнюються значення різних типів, JavaScript конвертує ці значення в числа
//false стає числом 0 при числовому перетворенні
//порівнюємо ці два значення - отримуємо true
//підносимо число 1 до 5 степеня - отримуємо число 1
//коли порівнюються значення різних типів, JavaScript конвертує ці значення в числа
//логічне значення true стає числом 1
//порівнюємо чи число 1 менше за число 1 - отримуємо false
